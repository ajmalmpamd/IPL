<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Job extends MY_Controller {    public $tmpl_path;    public $sec_path;    public $img_arr;    public function __construct() {        parent::__construct();        $this->load_modelslib();        $this->init_vars();        $this->load->helper('text');    }    public function load_modelslib() {        $this->load->model('M_job');        $this->load->model('M_common');    }    public function init_vars() {        $this->tmpl_path = 'admin/layout/template';        $this->sec_path = 'admin/job';        $this->redir_path = 'sitemanager/job';        $this->imagepath = 'assets/images/job';        $this->controller = 'sitemanager/job';        $this->title = 'Jobs';        $this->logname = 'job';    }    public function index() {        $this->has_access(); // Checking admin authentication -> core/MY_Controller.php        $nav_links = "<li><a href='#'>$this->title</a></li>";        $hrdata = array(            'title' => $this->title,            'sub_title' => $this->title,            'plus_link' => "$this->controller/add",            'controller' => $this->controller,            'imagepath' => $this->imagepath,        );        $content = array();        $total_row = $this->M_job->recordCount(); // Returns total number of records        $this->config->load('pagination');        $config["total_rows"] = $total_row;        $config["per_page"] = 25;        $config["base_url"] = base_url() . '/' . $this->redir_path;        $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;        $this->pagination->initialize($config);        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');        $content['result'] = $this->M_job->read($config["per_page"], $page);        $content['page'] = $page;        $content['pagination'] = $this->pagination->create_links();        $content['hrdata'] = $hrdata;        $data['content'] = $this->load->view($this->sec_path . '/index.php', $content, true);        $this->load->view($this->tmpl_path, $data);    }    public function add() {        $this->has_access();        $content = array();        $nav_links = "<li><a href='".base_url($this->controller)."'>$this->title </a></li>        <li class='active'>Add</li>";        $company_config['table']='company';        $company_config['condition']['status']='Y';        $companies=$this->M_common->getDatas($company_config);        $company['0']='None';        foreach ($companies as $company_val){            $company[$company_val['id']]=$company_val['name'];        }                $category_config['table']='category';        $category_config['condition']['status']='Y';        $category_config['order']['key']='order';        $category_config['order']['value']='asc';        $categories=$this->M_common->getDatas($category_config);        $category['0']='Not specified';        foreach ($categories as $val){            $category[$val['id']]=$val['title'];        }        $location_config['table']='location';        $location_config['condition']['status']='Y';        $location_config['order']['key']='order';        $location_config['order']['value']='asc';        $locations=$this->M_common->getDatas($location_config);        $location['0']='Not specified';        foreach ($locations as $val){            $location[$val['id']]=$val['title'];        }                $role_config['table']='role';        $role_config['condition']['status']='Y';        $role_config['order']['key']='order';        $role_config['order']['value']='asc';        $roles=$this->M_common->getDatas($role_config);        $role['0']='Not specified';        foreach ($roles as $val){            $role[$val['id']]=$val['title'];        }                $experience_config['table']='experience';        $experience_config['condition']['status']='Y';        $experience_config['order']['key']='order';        $experience_config['order']['value']='asc';        $experiences=$this->M_common->getDatas($experience_config);        $experience['0']='Not specified';        foreach ($experiences as $val){            $experience[$val['id']]=$val['title'];        }                $skill_config['table']='skill';        $skill_config['condition']['status']='Y';        $skill_config['order']['key']='order';        $skill_config['order']['value']='asc';        $skills=$this->M_common->getDatas($skill_config);        $skill['0']='Not specified';        foreach ($skills as $val){            $skill[$val['id']]=$val['title'];        }                $type_config['table']='type';        $type_config['condition']['status']='Y';        $type_config['order']['key']='order';        $type_config['order']['value']='asc';        $types=$this->M_common->getDatas($type_config);        $type['0']='Not specified';        foreach ($types as $val){            $type[$val['id']]=$val['title'];        }                $sector_config['table']='sector';        $sector_config['condition']['status']='Y';        $sector_config['order']['key']='order';        $sector_config['order']['value']='asc';        $sectors=$this->M_common->getDatas($sector_config);        $sector['0']='Not specified';        foreach ($sectors as $val){            $sector[$val['id']]=$val['title'];        }        $hrdata = array(            'title' => $this->title,            'sub_title' => 'Add ' . $this->title,            'back_link' => $this->controller,            'controller' => $this->controller,            'imagepath' => $this->imagepath,            'company'   =>$company,            'category'   =>$category,            'location'   =>$location,            'type'   =>$type,            'role'   =>$role,            'experience'   =>$experience,            'skill'   =>$skill,            'sector'   =>$sector,        );        $this->form_validation->set_rules('title', 'Title', 'trim|required');        $this->form_validation->set_rules('date', 'Date', 'trim|required');        // $this->form_validation->set_rules('designation', 'Designation', 'trim|required');        // $this->form_validation->set_rules('order', 'Order', 'trim|numeric');        $this->form_validation->set_rules('description', 'Description', 'trim|required');        $this->form_validation->set_rules('status', 'status', 'trim|required');        if (isset($_FILES['image']['name']) && $_FILES['image']['name'] == '') {            $this->form_validation->set_rules('image', 'Image', 'required');        }        if ($this->form_validation->run() != false) {            $img_upload = '';            if (!empty($_FILES['image']['name'])) {                $img_upload = $this->image_upload($_FILES['image']['name']);            }            $insert_data = array(                'title' => $this->input->post('title'),                'company' => (int)$this->input->post('company'),                'location' => (int)$this->input->post('location'),                'category' => (int)$this->input->post('category'),                'type' => (int)$this->input->post('type'),                'role' => (int)$this->input->post('role'),                'experience' => (int)$this->input->post('experience'),                'sector' => (int)$this->input->post('sector'),                'description' => $this->input->post('description'),                'date' => date('Y-m-d',strtotime($this->input->post('date'))),                'featured' => $this->input->post('show'),                'status' => $this->input->post('status')            );                        $insert = $this->M_job->insert($insert_data);            $jobskill['job']=$insert;            $iskills=$this->input->post('skills[]');            foreach ($iskills as $skval){                $jobskill['skill']=$skval;                $this->M_common->putDate('job_skill',$jobskill);            }            $this->M_log->insert_log("add_$this->logname", "Admin Added $this->title", $this->adm_id, $insert);            $this->M_notify->set_notification("$this->title Added Successully", 'success');            redirect($this->redir_path);        }        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');        $data['content'] = $this->load->view($this->sec_path . '/add.php', $sdata = array('hrdata' => $hrdata), true);// print_r($data); die();        $this->load->view($this->tmpl_path, $data);    }    public function edit($id) {        $this->has_access();        $content = array();        $content['editdata'] = $this->M_job->getRow($id);        if (!$id > 0 || empty($content['editdata'])) {            $this->M_notify->set_notification('Requested Content not found', 'error');            redirect($this->redir_path);            die();        }        $nav_links = "<li><a href='#'> $this->title </a></li>        <li class='active'>Edit</li>";        $company_config['table']='company';        $company_config['condition']['status']='Y';        $companies=$this->M_common->getDatas($company_config);        $company['0']='None';        foreach ($companies as $company_val){            $company[$company_val['id']]=$company_val['name'];        }                $category_config['table']='category';        $category_config['condition']['status']='Y';        $category_config['order']['key']='order';        $category_config['order']['value']='asc';        $categories=$this->M_common->getDatas($category_config);        $category['0']='Not specified';        foreach ($categories as $val){            $category[$val['id']]=$val['title'];        }        $location_config['table']='location';        $location_config['condition']['status']='Y';        $location_config['order']['key']='order';        $location_config['order']['value']='asc';        $locations=$this->M_common->getDatas($location_config);        $location['0']='Not specified';        foreach ($locations as $val){            $location[$val['id']]=$val['title'];        }                $role_config['table']='role';        $role_config['condition']['status']='Y';        $role_config['order']['key']='order';        $role_config['order']['value']='asc';        $roles=$this->M_common->getDatas($role_config);        $role['0']='Not specified';        foreach ($roles as $val){            $role[$val['id']]=$val['title'];        }                $experience_config['table']='experience';        $experience_config['condition']['status']='Y';        $experience_config['order']['key']='order';        $experience_config['order']['value']='asc';        $experiences=$this->M_common->getDatas($experience_config);        $experience['0']='Not specified';        foreach ($experiences as $val){            $experience[$val['id']]=$val['title'];        }                $skill_config['table']='skill';        $skill_config['condition']['status']='Y';        $skill_config['order']['key']='order';        $skill_config['order']['value']='asc';        $skills=$this->M_common->getDatas($skill_config);        $skill['0']='Not specified';        foreach ($skills as $val){            $skill[$val['id']]=$val['title'];        }                $type_config['table']='type';        $type_config['condition']['status']='Y';        $type_config['order']['key']='order';        $type_config['order']['value']='asc';        $types=$this->M_common->getDatas($type_config);        $type['0']='Not specified';        foreach ($types as $val){            $type[$val['id']]=$val['title'];        }                $sector_config['table']='sector';        $sector_config['condition']['status']='Y';        $sector_config['order']['key']='order';        $sector_config['order']['value']='asc';        $sectors=$this->M_common->getDatas($sector_config);        $sector['0']='Not specified';        foreach ($sectors as $val){            $sector[$val['id']]=$val['title'];        }                $sskill_config['table']='job_skill';        $sskill_config['condition']['job']=$id;        $selected_skills=$this->M_common->getDatas($sskill_config);        $sskills=array();        foreach ($selected_skills as $val){            $sskills[]=$val['skill'];        }               $hrdata = array(            'title' => $this->title,            'sub_title' => 'Edit ' . $this->title,            'back_link' => $this->controller,            'controller' => $this->controller,            'imagepath' => $this->imagepath,            'company'   =>$company,            'category'   =>$category,            'location'   =>$location,            'type'   =>$type,            'role'   =>$role,            'experience'   =>$experience,            'skill'   =>$skill,            'sector'   =>$sector,            'sskill'    =>$sskills        );        $this->form_validation->set_rules('title', 'Title', 'trim|required');        $this->form_validation->set_rules('date', 'Date', 'trim|required');        // $this->form_validation->set_rules('designation', 'Designation', 'trim|required');        // $this->form_validation->set_rules('order', 'Order', 'trim|numeric');        $this->form_validation->set_rules('description', 'Description', 'trim|required');        $this->form_validation->set_rules('status', 'status', 'trim|required');        if ($this->form_validation->run() != false) {            $update_data = array(                'title' => $this->input->post('title'),                'company' => (int)$this->input->post('company'),                'location' => (int)$this->input->post('location'),                'category' => (int)$this->input->post('category'),                'type' => (int)$this->input->post('type'),                'role' => (int)$this->input->post('role'),                'experience' => (int)$this->input->post('experience'),                'sector' => (int)$this->input->post('sector'),                'description' => $this->input->post('description'),                'date' => date('Y-m-d',strtotime($this->input->post('date'))),                'featured' => $this->input->post('show'),                'status' => $this->input->post('status')            );                        $update = $this->M_job->update($update_data, $id);            $delete_where['job'] = $id;            $this->M_common->deleteDate('job_skill',$delete_where);            $jobskill['job']=$id;            $iskills=$this->input->post('skills[]');            foreach ($iskills as $skval){                $jobskill['skill']=$skval;                $this->M_common->putDate('job_skill',$jobskill);            }            $this->M_log->insert_log("upd_$this->logname", "Admin Updated $this->title", $this->adm_id, $id);            $this->M_notify->set_notification("$this->title Updated Successully", 'success');            redirect($this->redir_path);        }        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');//        $content['imgpath'] = $this->imagepath;        $content['hrdata'] = $hrdata;        $data['content'] = $this->load->view($this->sec_path . '/edit.php', $content, true);// print_r($data); die();        $this->load->view($this->tmpl_path, $data);    }    public function image_upload($image, $image_field = 'image') {        $img_ext = explode('.', $image);        $img_upl_name = 'p' . get_rand_number() . '.' . end($img_ext);        $upl_path = $this->imagepath; // Default upload directory defined in HRM_Controller        $img_full_path = $upl_path . $img_upl_name;        $mksubdir = $this->imagepath;        if (!is_dir($mksubdir)) {            mkdir($mksubdir);        }        $config['upload_path'] = $upl_path;        $config['allowed_types'] = 'jpg|jpeg|png|gif';        $config['file_name'] = $img_upl_name;//Load upload library and initialize configuration        $this->load->library('upload', $config);        $this->upload->initialize($config);        if ($this->upload->do_upload($image_field)) {            return $img_upl_name;        }    }    public function delimg($id = 0) {        $this->has_access();        $del_img = $this->M_job->delImg($this->imagepath, $id);//die($del_img);        $this->M_notify->set_notification('Image deleted successfully', 'success');        redirect($this->redir_path . '/edit/' . $id);    }    public function delete($id) {        $this->has_access();        if (!$id > 0) {            $this->M_notify->set_notification('Requested Content not found', 'error');            redirect($this->redir_path);            die();        }        $this->M_job->delete($this->imagepath, $id);        $this->M_log->insert_log("del_$this->logname", "Admin Deleted $this->title", $this->adm_id, $id);//  $this->M_log->insertLogadmin('job_deleted',$id);        $this->M_notify->set_notification("$this->title deleted successfully", 'success');        redirect($this->redir_path);    }}