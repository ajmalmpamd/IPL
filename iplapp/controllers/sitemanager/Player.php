<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Player extends MY_Controller {    public $tmpl_path;    public $sec_path;    public $img_arr;    public function __construct() {        parent::__construct();        $this->load_modelslib();        $this->init_vars();        $this->load->helper('text');    }    public function load_modelslib() {        $this->load->model('M_player');    }    public function init_vars() {        $this->tmpl_path = 'admin/layout/template';        $this->sec_path = 'admin/player';        $this->redir_path = 'sitemanager/player';        $this->imagepath = 'assets/images/player';        $this->controller = 'sitemanager/player';        $this->title = 'Player';        $this->logname = 'player';    }    public function index() {        $this->has_access(); // Checking admin authentication -> core/MY_Controller.php        $nav_links = "<li><a href='#'>$this->title</a></li>";        $hrdata = array(            'title' => $this->title,            'sub_title' => $this->title,            'plus_link' => "$this->controller/add",            'controller' => $this->controller,            'imagepath' => $this->imagepath,        );        $content = array();        $total_row = $this->M_player->recordCount(); // Returns total number of records        $this->config->load('pagination');        $config["total_rows"] = $total_row;        $config["per_page"] = 25;        $config["base_url"] = base_url() . '/' . $this->redir_path;        $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;        $this->pagination->initialize($config);        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');        $content['result'] = $this->M_player->read($config["per_page"], $page);        $content['page'] = $page;        $content['pagination'] = $this->pagination->create_links();        $content['hrdata'] = $hrdata;        $data['content'] = $this->load->view($this->sec_path . '/index.php', $content, true);        $this->load->view($this->tmpl_path, $data);    }    public function add() {        $this->has_access();        $content = array();        $nav_links = "<li><a href='" . base_url($this->controller) . "'>$this->title </a></li>        <li class='active'>Add</li>";                $team_config['table']='team';        $team_config['condition']['status']='Y';        $teams=$this->M_common->getDatas($team_config);        $team['0']='Select a Team';        foreach ($teams as $team_val){            $team[$team_val['id']]=$team_val['name'];        }                $hrdata = array(            'title' => $this->title,            'sub_title' => 'Add ' . $this->title,            'back_link' => $this->controller,            'controller' => $this->controller,            'imagepath' => $this->imagepath,            'team'   =>$team,        );        $this->form_validation->set_rules('name', 'Name', 'trim|required');        $this->form_validation->set_rules('team', 'Team', 'trim|integer|required');        $this->form_validation->set_rules('designation', 'Venue', 'trim|required');        $this->form_validation->set_rules('about', 'About the Player', 'trim|required');        $this->form_validation->set_rules('status', 'status', 'trim|required');        if (isset($_FILES['image']['name']) && $_FILES['image']['name'] == '') {            $this->form_validation->set_rules('image', 'Image', 'required');        }        if ($this->form_validation->run() != false) {            $img_upload = '';            if (!empty($_FILES['image']['name'])) {                $img_upload = $this->image_upload($_FILES['image']['name']);            }            $insert_data = array(                'name' => $this->input->post('name'),                'team' => $this->input->post('team'),                'designation' => $this->input->post('designation'),                'image' => $img_upload,                'about' => $this->input->post('about'),                'status' => $this->input->post('status'),            );            $insert = $this->M_player->insert($insert_data);            $this->M_log->insert_log("add_$this->logname", "Admin Added $this->title", $this->adm_id, $insert);            $this->M_notify->set_notification("$this->title Added Successully", 'success');            redirect($this->redir_path);        }        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');        $data['content'] = $this->load->view($this->sec_path . '/add.php', $sdata = array('hrdata' => $hrdata), true);        $this->load->view($this->tmpl_path, $data);    }    public function edit($id) {                $this->has_access();        $content = array();        $content['editdata'] = $this->M_player->getRow($id);        if (!$id > 0 || empty($content['editdata'])) {            $this->M_notify->set_notification('Requested Content not found', 'error');            redirect($this->redir_path);            die();        }        $nav_links = "<li><a href='#'> $this->title </a></li>        <li class='active'>Edit</li>";        $team_config['table']='team';        $team_config['condition']['status']='Y';        $teams=$this->M_common->getDatas($team_config);        $team['0']='Select a Team';        foreach ($teams as $team_val){            $team[$team_val['id']]=$team_val['name'];        }        $hrdata = array(            'title' => $this->title,            'sub_title' => 'Edit ' . $this->title,            'back_link' => $this->controller,            'controller' => $this->controller,            'imagepath' => $this->imagepath,            'team'   =>$team,        );        $this->form_validation->set_rules('name', 'Name', 'trim|required');        $this->form_validation->set_rules('team', 'Team', 'trim|integer|required');        $this->form_validation->set_rules('designation', 'Venue', 'trim|required');        $this->form_validation->set_rules('about', 'About the Player', 'trim|required');        $this->form_validation->set_rules('status', 'status', 'trim|required');        if ($this->form_validation->run() != false) {            $update_data = array(                'name' => $this->input->post('name'),                'team' => $this->input->post('team'),                'designation' => $this->input->post('designation'),                'about' => $this->input->post('about'),                'status' => $this->input->post('status'),            );            if (!empty($_FILES['image']['name'])) {                $img_upload = $this->image_upload($_FILES['image']['name']);                $this->M_player->delImg($this->imagepath, $id);                $update_data['image'] = $img_upload;            }            $update = $this->M_player->update($update_data, $id);            $this->M_log->insert_log("upd_$this->logname", "Admin Updated $this->title", $this->adm_id, $id);            $this->M_notify->set_notification("$this->title Updated Successully", 'success');            redirect($this->redir_path);        }        $data = $this->template->set_template_admin($this->adm_name, $hrdata, $nav_links, '');        $content['hrdata'] = $hrdata;        $data['content'] = $this->load->view($this->sec_path . '/edit.php', $content, true);        $this->load->view($this->tmpl_path, $data);    }        public function image_upload($image, $image_field = 'image') {        $img_ext = explode('.', $image);        $img_upl_name = 'p' . get_rand_number() . '.' . end($img_ext);        $upl_path = $this->imagepath;         $img_full_path = $upl_path . $img_upl_name;        $mksubdir = $this->imagepath;        if (!is_dir($mksubdir)) {            mkdir($mksubdir);        }        $config['upload_path'] = $upl_path;        $config['allowed_types'] = 'jpg|jpeg|png|gif';        $config['file_name'] = $img_upl_name;        //Load upload library and initialize configuration        $this->load->library('upload', $config);        $this->upload->initialize($config);        if ($this->upload->do_upload($image_field)) {            return $img_upl_name;        }    }    public function delimg($id = 0) {        $this->has_access();        $del_img = $this->M_player->delImg($this->imagepath, $id);        $this->M_notify->set_notification('Image deleted successfully', 'success');        redirect($this->redir_path . '/edit/' . $id);    }    public function delete($id) {        $this->has_access();        if (!$id > 0) {            $this->M_notify->set_notification('Requested Content not found', 'error');            redirect($this->redir_path);            die();        }        $this->M_player->delete($this->imagepath, $id);        $this->M_log->insert_log("del_$this->logname", "Admin Deleted $this->title", $this->adm_id, $id);        $this->M_notify->set_notification("$this->title deleted successfully", 'success');        redirect($this->redir_path);    }}